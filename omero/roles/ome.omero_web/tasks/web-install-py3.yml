---
# install OMERO.web

# TODO: allow version to be specified, handle latest/present etc
# E.g. get version info from https://pypi.org/pypi/omero-web/json
# and parse using
# https://stackoverflow.com/questions/54025894/how-to-sort-version-numbers-in-ansible

- name: omero web | display omero_common_basedir value
  debug:
    msg: "default: {{ omero_common_basedir }}"

- name: omero web | is web symlink present
  become: true
  stat:
    path: "{{ omero_web_omerodir }}"
  register: omero_web_symlink_st

# Symlink â‡’ Old Python 2 installation: stop OMERO before doing anything else
- name: omero web | stop omero web
  become: true
  service:
    name: omero-web
    state: stopped
  when: omero_web_symlink_st.stat.exists and omero_web_symlink_st.stat.islnk

- name: omero web | remove symlink
  become: true
  file:
    path: "{{ omero_web_omerodir }}"
    state: absent
  when: omero_web_symlink_st.stat.exists and omero_web_symlink_st.stat.islnk

- name: omero web | create OMERODIR readonly
  become: true
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
  with_items:
    - "{{ omero_web_basedir }}"
    - "{{ omero_web_basedir }}/config"
    - "{{ omero_web_omerodir }}"
    - "{{ omero_web_omerodir }}/bin"

# omero-web system user
# TODO: Check is home directory location be modified for an upgrade?
- name: omero web | create system user
  become: true
  user:
    name: "{{ omero_web_system_user }}"
    home: "{{ omero_web_omerodir }}/var"
    createhome: false
    state: present
    system: true
    uid: "{{ omero_web_system_uid | default(omit) }}"

- name: omero web | create OMERODIR writeable
  become: true
  file:
    path: "{{ omero_web_omerodir }}{{ item }}"
    state: directory
    owner: "{{ omero_web_system_user }}"
    mode: 0755
  with_items:
    - /etc/grid
    - /var

- name: omero web | remove old configuration script
  become: true
  file:
    path: "{{ omero_web_basedir }}/config/omero-web-config-update.sh"
    state: absent

- name: omero web | configuration 00-omero-web.omero
  become: true
  template:
    dest: "{{ omero_web_basedir }}/config/00-omero-web.omero"
    force: true
    src: 00-omero-web-omero.j2
    mode: 0644
  notify:
    - omero-web rewrite omero-web configuration
    - omero-web restart omero-web

- name: omero web | add application web configuration
  become: true
  template:
    dest: "{{ omero_web_basedir }}/config/\
      {{ omero_web_apps_config_name }}.omero"
    force: true
    src: omero-web-apps-omero.j2
    mode: 0644
  notify:
    - omero-web rewrite omero-web configuration
    - omero-web restart omero-web

- name: omero web | setup virtualenv3
  become: true
  pip:
    name: "pip>=21"
    state: present
    virtualenv: "{{ omero_web_virtualenv_basedir }}"
    virtualenv_command: /usr/local/bin/ome-python3-virtualenv

- name: omero web | install tzdata
  become: true
  pip:
    name: tzdata
    state: present
    virtualenv: "{{ omero_web_virtualenv_basedir }}"
    virtualenv_command: /usr/local/bin/ome-python3-virtualenv
  notify:
    - omero-web rewrite omero-web configuration
    - omero-web restart omero-web

- name: omero web | install django_redis
  become: true
  pip:
    name: django_redis
    state: present
    virtualenv: "{{ omero_web_virtualenv_basedir }}"
    virtualenv_command: /usr/local/bin/ome-python3-virtualenv
  notify:
    - omero-web rewrite omero-web configuration
    - omero-web restart omero-web
  when: omero_web_setup_redis_session

# TODO: figure out dependencies, use omero-web version
# Install/upgrade OMERO.web after the configuration files are updated
# This should mean that if OMERO.web fails to start due to a configuration
# error it will be updated before a restart
- name: omero web | install requirements
  become: true
  pip:
    name: >-
      {{
        omero_web_python_requirements +
        omero_web_python_addons +
        omero_web_apps_packages
      }}
    state: present
    virtualenv: "{{ omero_web_virtualenv_basedir }}"
    virtualenv_command: /usr/local/bin/ome-python3-virtualenv
  notify:
    - omero-web rewrite omero-web configuration
    - omero-web restart omero-web

# Remembering to set OMERODIR everywhere is prone to error
- name: omero web | create omero web wrapper
  become: true
  template:
    dest: "{{ omero_web_omero_command }}"
    src: bin-omero.j2
    mode: 0555
  notify:
    - omero-web rewrite omero-web configuration
    - omero-web restart omero-web

- name: omero web | selinux restorecon
  become: true
  command: >-
    /usr/sbin/restorecon -R -v
    {{ ansible_check_mode | ternary('-n', '') }}
    {{ omero_web_basedir }}/OMERO.web
  register: result
  check_mode: false
  changed_when: result.stdout | length > 0
  when: selinux_enabled
