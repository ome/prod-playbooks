---
# install/upgrade OMERO.server

- name: omero server | is server symlink present
  become: true
  stat:
    path: "{{ omero_server_basedir }}/{{ omero_server_symlink }}"
  register: omero_server_symlink_st

- name: omero server | is virtualenv present
  become: true
  stat:
    path: "{{ omero_server_virtualenv_basedir }}"
  register: omero_server_venv_st

# Is there an existing OMERO.server that uses the requested virtualenv?
- name: omero server | does omero server match requested virtualenv
  set_fact:
    _omero_server_matches_virtualenv: >-
      {{
        omero_server_symlink_st.stat.exists and
        omero_server_venv_st.stat.exists
      }}

# Previously this used the output of 'omero version'
# Python modules are now decoupled so get the version from the folder name
- name: omero server | get server version
  set_fact:
    omero_server_version: >-
      {{
        omero_server_symlink_st.stat.lnk_target | basename |
        regex_replace('OMERO.server-(.+)-ice3.+', '\1')
      }}
  when: _omero_server_matches_virtualenv

- name: omero server | check omero version could be obtained
  assert:
    msg: >-
      OMERO.server found but unable to get version,
      you may have a corrupt installation
    that: >-
      not _omero_server_matches_virtualenv or
      (omero_server_version | default('') | length > 0)

# TODO: If server was started by systemd but stopped directly you may end up
# with a hanging process

# Check whether an upgrade is available since `omego upgrade` always
# restarts the server
- name: omero server | get latest downloads url
  uri:
    url: https://downloads.openmicroscopy.org/latest/omero
    method: HEAD
  register: _omero_server_downloads_latest
  check_mode: false

# omego supports --release "latest" but not "present"
# It's easiest to lookup a concrete version and use this for all omego
# operations instead
- name: omero server | get latest version
  set_fact:
    _omero_server_new_version: "{{
      (omero_server_release in ('latest', 'present')) | ternary(
         _omero_server_downloads_latest.url.strip('/').split('/')[-1],
         omero_server_release
      )
  }}"

- block:
    - name: omero server | checkupgrade
      set_fact:
        # If _omero_server_new_version does not begin with a number assume
        # it's a custom build, always upgrade
        # If we're switching from a non-venv to a venv treat it as an upgrade
        _omero_server_update_needed: >-
          {{
            not _omero_server_matches_virtualenv or
            not (_omero_server_new_version | regex_search('^[0-9]')) or
            (
              (omero_server_version | default('') | length > 0) and
              (omero_server_version != _omero_server_new_version) and
              (omero_server_version is version(
                _omero_server_new_version,
                omero_server_checkupgrade_comparator))
            )
          }}
  rescue:
    # For example, comparing 5.6.dev2 with 5.6.0-m1 leads to
    # '<' not supported between instances of 'str' and 'int'
    # Assume this is a dev or pre-release and upgrade
    # Ansible will exit 0 but show a failed task in the summary

    - debug:
        msg: >-
          Error comparing current version
          ({{ omero_server_version | default('') }})
          and new version
          ({{ _omero_server_new_version }}), upgrading

    - name: omero server | checkupgrade failed
      set_fact:
        _omero_server_update_needed: true

- debug:
    msg: >-
      Upgrade needed: {{ omero_server_version | default('UNKNOWN') }} ->
      {{ omero_server_release }}
  when: _omero_server_update_needed

# If the OMERO.server symlink doesn't exist don't upgrade, this is a new
# installation
- name: omero server | set upgrade flag
  set_fact:
    _omero_server_execute_upgrade: "{{
      omero_server_upgrade and
      _omero_server_update_needed and
      (omero_server_release != 'present') and
      omero_server_symlink_st.stat.exists
    }}"


# TODO: figure out dependencies
- name: omero server | setup virtualenv3
  become: true
  pip:
    name: "pip>=21"
    state: present
    virtualenv: "{{ omero_server_virtualenv_basedir }}"
    virtualenv_command: /usr/local/bin/ome-python3-virtualenv

- name: omero server | install requirements
  become: true
  pip:
    name: "{{ omero_server_python_requirements + omero_server_python_addons }}"
    state: present
    virtualenv: "{{ omero_server_virtualenv_basedir }}"
    virtualenv_command: /usr/local/bin/ome-python3-virtualenv
  notify:
    - omero-server rewrite omero-server configuration
    - omero-server restart omero-server

- name: omero server | install omero
  become: true
  become_user: "{{ omero_server_system_user }}"
  command: >
    {{ omero_server_omego }}
    install
    {{ omero_server_omego_options }}
    {{ omero_server_omego_db_options }}
    --rootpass {{ omero_server_rootpassword | quote }}
  args:
    chdir: "{{ omero_server_basedir }}"
    creates: "{{ omero_server_basedir }}/{{ omero_server_symlink }}"
  environment: "{{ omero_server_omego_environment }}"
  notify:
    - omero-server rewrite omero-server configuration
    - omero-server restart omero-server

# Backup database

- name: omero server | create omero backup directory
  become: true
  file:
    mode: 0700
    owner: "{{ omero_server_system_user }}"
    path: "{{ omero_server_database_backupdir }}"
    state: directory
  when: >-
    (omero_server_database_backupdir | length > 0) and
    _omero_server_execute_upgrade

- name: omero server | backup database
  become: true
  become_user: "{{ omero_server_system_user }}"
  command: >
    {{ omero_server_omego }}
    db dump
    {{ omero_server_omego_db_options }}
    --serverdir {{ omero_server_basedir }}/{{ omero_server_symlink }}
  args:
    chdir: "{{ omero_server_database_backupdir }}"
  environment: "{{ omero_server_omego_environment }}"
  when: >-
    (omero_server_database_backupdir | length > 0) and
    _omero_server_execute_upgrade

# Upgrade
- name: omero server | upgrade
  become: true
  become_user: "{{ omero_server_system_user }}"
  command: >
    {{ omero_server_omego }}
    install --upgrade
    {{ omero_server_omego_options }}
    {{ omero_server_omego_db_options }}
  args:
    chdir: "{{ omero_server_basedir }}"
  environment: "{{ omero_server_omego_environment }}"
  when: _omero_server_execute_upgrade
  notify:
    - omero-server rewrite omero-server configuration
    - omero-server restart omero-server

- name: omero server | delete OMERO.server/lib/python
  become: true
  file:
    path: "{{ omero_server_omerodir }}/lib/python"
    state: absent

# Remembering to set OMERODIR everywhere is prone to error
- name: omero server | create bin directory for wrapper
  become: true
  file:
    path: "{{ omero_server_omerodir }}/bin/"
    state: directory
    mode: 0555

- name: omero server | create omero server wrapper
  become: true
  template:
    dest: "{{ omero_server_omero_command }}"
    src: bin-omero.j2
    mode: 0555
  notify:
    - omero-server rewrite omero-server configuration
    - omero-server restart omero-server

- name: system packages | install openssl
  become: true
  package:
    name: openssl
    state: present

- name: server package | install redhat blosc
  become: true
  ansible.builtin.dnf:
    update_cache: true
    name: blosc
    state: present
  when: ansible_os_family | lower == 'redhat'

- name: server package | install debian blosc
  become: true
  ansible.builtin.apt:
    update_cache: true
    name: libblosc1
    state: present
  when: ansible_os_family | lower == 'debian'
