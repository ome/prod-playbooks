---
- hosts: idr0-slot3.openmicroscopy.org
  become: true
  tasks:
    - name: Check mandatory variables are defined
      ansible.builtin.fail:
        msg: Please pass 'product' and 'version' variables
      when: product is not defined and version is not defined

    - name: Check the release component exist
      stat:
        path: "{{ item }}/{{ product }}/{{ version }}/"
      register: s
      with_items: "{{ www_folders }}"

    - name: Check the release component exist
      ansible.builtin.fail:
        msg: "{{ item }} does not exist"
      with_items: "{{ s.results }}"
      when: item.stat is not defined or not item.stat.exists

    - name: Check pre-release
      ansible.builtin.set_fact:
        prerelease: "{{ '-' in version }}"

    - name: Define minor and major versions
      ansible.builtin.set_fact:
        minorversion: "{{ version.split('.')[:2] | join('.') }}"
        majorversion: "{{ version.split('.')[:1] | join('.') }}"

    - name: Remove .htaccess file
      file:
        path: "{{ item }}/{{ product }}/{{ version }}/.htaccess"
        state: absent
      with_items: "{{ www_folders }}"

    - name: Make release folders read-only and owned by root
      file:
        path: "{{ item }}/{{ product }}/{{ version }}"
        state: directory
        owner: root
        group: root
        recurse: true
        mode: 01555
      with_items: "{{ www_folders }}"

    - name: Create minor version directory
      file:
        path: "{{ item }}/{{ product }}/{{ minorversion }}"
        state: directory
        mode: 0755
      with_items: "{{ www_folders }}"
      when: not prerelease

    - name: Create minor version redirects
      ansible.builtin.copy:
        dest: "{{ item }}/{{ product }}/{{ minorversion }}/.htaccess"
        content: "Redirect 301 /{{ product }}/{{ minorversion }} \
          /{{ product }}/{{ version }}"
        mode: 0644
      with_items: "{{ www_folders }}"
      when: not prerelease

    - name: Create minor version directory
      file:
        path: "{{ item }}/{{ product }}/{{ majorversion }}"
        state: directory
        mode: 0755
      with_items: "{{ www_folders }}"
      when: not prerelease

    - name: Create major version redirects
      ansible.builtin.copy:
        dest: "{{ item }}/{{ product }}/{{ majorversion }}/.htaccess"
        content: "Redirect 301 /{{ product }}/{{ majorversion }} \
          /{{ product }}/{{ version }}"
        mode: 0644
      with_items: "{{ www_folders }}"
      when: not prerelease

    - name: Create latest version directory
      file:
        path: "{{ item }}/{{ product }}/latest"
        state: directory
        mode: 0755
      with_items: "{{ www_folders }}"
      when: not prerelease

    - name: Create latest version redirect
      ansible.builtin.copy:
        dest: "{{ item }}/{{ product }}/latest/.htaccess"
        content: "Redirect 301 /{{ product }}/latest \
          /{{ product }}/{{ version }}"
        mode: 0644
      with_items: "{{ www_folders }}"
      when: not prerelease
