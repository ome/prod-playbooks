# OMERO.web SSL configuration
listen 443 ssl;

ssl_certificate {{ ssl_certificate_bundled_path }};
ssl_certificate_key {{ ssl_certificate_key_path }};

# use default ssl_protocols and ssl_ciphers:
# ssl_protocols  TLSv1.2 TLSv1.3;  # don't use SSLv3 ref: POODLE
# ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305;
# http://nginx.org/en/docs/http/configuring_https_servers.html
ssl_prefer_server_ciphers on;

ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305;


# HTTP Strict Transport Security (HSTS)
add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

if ($ssl_protocol = "") {
    rewrite ^/(.*) https://$host/$1 permanent;
}
