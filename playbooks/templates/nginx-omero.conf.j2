server {
    listen 80;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name $hostname;

    ssl_certificate {{ ssl_certificate_bundled_path }};
    ssl_certificate_key {{ ssl_certificate_key_path }};
    ssl_protocols   TLSv1 TLSv1.1 TLSv1.2;

    if ($ssl_protocol = "") {
        rewrite ^/(.*) https://$host/$1 permanent;
    }

    # Add perfect forward secrecy
    ssl_prefer_server_ciphers on;

    # Don't add HSTS header, already added by backend server

    # ciphers
    # Based on https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=nginx-1.10.2&openssl=1.0.1e&hsts=yes&profile=intermediate
    # with some weak ciphers removed
    ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA::AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:!aNULL:!MD5:!DSS';

    sendfile on;
    client_max_body_size 0;

    include /etc/nginx/conf.d-nested-includes/*.conf;

    # maintenance page serve from here
    location @maintenance {
        root {{ omero_common_basedir }}/server/OMERO.server/etc/templates/error;
        try_files $uri /maintainance.html =502;
    }

    location / {
        error_page 502 @maintenance;
        # return 502;
        # checks for static file, if not found proxy to nginx_omero_web_server_address
    
        proxy_pass              {{ nginx_omero_web_server_address | default('https://www.openmicroscopy.org/') }};
        proxy_set_header        Host $host;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto $scheme;
        proxy_connect_timeout   150;
        proxy_send_timeout      100;
        proxy_read_timeout      100;
        proxy_buffers           4 32k;
        client_max_body_size    8m;
        client_body_buffer_size 128k;
    }

}

